(() => {
  const t = {
    190: () => {
      function t(e) { return t = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (t) { return typeof t; } : function (t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t; }, t(e); } function e(t, e) { for (let r = 0; r < e.length; r++) { const o = e[r]; o.enumerable = o.enumerable || !1, o.configurable = !0, 'value' in o && (o.writable = !0), Object.defineProperty(t, n(o.key), o); } } function n(e) { const n = (function (e, n) { if (t(e) != 'object' || !e) return e; const r = e[Symbol.toPrimitive]; if (void 0 !== r) { const o = r.call(e, 'string'); if (t(o) != 'object') return o; throw new TypeError('@@toPrimitive must return a primitive value.'); } return String(e); }(e)); return t(n) == 'symbol' ? n : String(n); } function r(t) {
        const e = typeof Map === 'function' ? new Map() : void 0; return r = function (t) {
          if (t === null || !(function (t) { try { return Function.toString.call(t).indexOf('[native code]') !== -1; } catch (e) { return typeof t === 'function'; } }(t))) return t; if (typeof t !== 'function') throw new TypeError('Super expression must either be null or a function'); if (void 0 !== e) { if (e.has(t)) return e.get(t); e.set(t, n); } function n() { return (function (t, e, n) { if (o()) return Reflect.construct.apply(null, arguments); const r = [null]; r.push.apply(r, e); const c = new (t.bind.apply(t, r))(); return n && i(c, n.prototype), c; }(t, arguments, c(this).constructor)); } return n.prototype = Object.create(t.prototype, {
            constructor: {
              value: n, enumerable: !1, writable: !0, configurable: !0,
            },
          }), i(n, t);
        }, r(t);
      } function o() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (() => {}))); } catch (t) {} return (o = function () { return !!t; })(); } function i(t, e) { return i = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, i(t, e); } function c(t) { return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, c(t); } const a = (function (n) {
        function r() { let e; let n; let i; let a; return (function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, r)), (n = this, i = r, i = c(i), e = (function (e, n) { if (n && (t(n) === 'object' || typeof n === 'function')) return n; if (void 0 !== n) throw new TypeError('Derived constructors may only return object or undefined'); return (function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t; }(e)); }(n, o() ? Reflect.construct(i, a || [], c(n).constructor) : i.apply(n, a)))).shadowDOM = e.attachShadow({ mode: 'open' }), e; } let a; let u; return (function (t, e) { if (typeof e !== 'function' && e !== null) throw new TypeError('Super expression must either be null or a function'); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, 'prototype', { writable: !1 }), e && i(t, e); }(r, n)), a = r, (u = [{ key: 'food', set(t) { this._food = t, this.render(); } }, {
          key: 'render',
          value() {
            this.shadowDOM.innerHTML = '\n      <style>\n        * {\n          margin: 0;\n          padding: 0;\n          box-sizing: border-box;\n          font-family: \'Poppins\';\n        }\n\n        :host {\n          display: block;\n          margin-bottom: 18px;\n          box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n          border-radius: 10px;\n          overflow: hidden;\n        }\n\n        .img-food {\n          width: 100%;\n          max-height: 300px;\n          object-fit: cover;\n          object-position: center;\n        }\n\n        .food-info {\n            padding: 40px;\n        }\n\n        .food-info > h2 {\n          font-size: 35px;\n          text-align: center;\n          font-weight: lighter;\n        }\n\n        .food-info > h4 {\n          font-size: 30px;\n          text-align: center;\n        }\n\n        .club-info > p {\n          white-space: pre-wrap;\n          word-wrap: break-word;\n          padding: 40px 24px 24px;\n          font-size: 14px;\n          color: #fff;\n        }\n\n        .ingre-container h3 {\n          text-align: center;\n          color: #fff;\n        }\n\n        .ingre-container ul {\n          font-size: 15px;\n          position: relative;\n          display: grid;\n          grid-template-columns: auto auto;\n          gap: 12px 16px;\n          padding: 16px 0 0 18px;\n          color: #ccc;\n          text-transform: capitalize;\n        }\n      </style>\n          \n      <img class="img-food" src="'.concat(this._food.strMealThumb, '" alt="Image Food">\n      <div class="food-info">\n        <h2>').concat(this._food.strMeal, '</h2>\n        <h4>').concat(this._food.strArea, '</h4>\n        <div class="ingre-container">\n          <h3>Ingredients:</h3>\n          <ul>').concat((function (t) { for (var e = '', n = 1; n <= 20; n++) { const r = t.strIngredient(n); if (!r) break; const o = t.strMeasure(n); e += '<li>'.concat(o, ' ').concat(r, '</li>'); } return e; }(this._food)), '</ul>\n        </div>\n        <p>')
              .concat(this._food.strInstructions, '</p>\n      </div>\n    ');
          },
        }]) && e(a.prototype, u), Object.defineProperty(a, 'prototype', { writable: !1 }), r;
      }(r(HTMLElement))); customElements.define('food-item', a);
    },
    357: () => {
      function t(e) { return t = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (t) { return typeof t; } : function (t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t; }, t(e); } function e(t, e) { for (let r = 0; r < e.length; r++) { const o = e[r]; o.enumerable = o.enumerable || !1, o.configurable = !0, 'value' in o && (o.writable = !0), Object.defineProperty(t, n(o.key), o); } } function n(e) { const n = (function (e, n) { if (t(e) != 'object' || !e) return e; const r = e[Symbol.toPrimitive]; if (void 0 !== r) { const o = r.call(e, 'string'); if (t(o) != 'object') return o; throw new TypeError('@@toPrimitive must return a primitive value.'); } return String(e); }(e)); return t(n) == 'symbol' ? n : String(n); } function r(t) {
        const e = typeof Map === 'function' ? new Map() : void 0; return r = function (t) {
          if (t === null || !(function (t) { try { return Function.toString.call(t).indexOf('[native code]') !== -1; } catch (e) { return typeof t === 'function'; } }(t))) return t; if (typeof t !== 'function') throw new TypeError('Super expression must either be null or a function'); if (void 0 !== e) { if (e.has(t)) return e.get(t); e.set(t, n); } function n() { return (function (t, e, n) { if (o()) return Reflect.construct.apply(null, arguments); const r = [null]; r.push.apply(r, e); const c = new (t.bind.apply(t, r))(); return n && i(c, n.prototype), c; }(t, arguments, c(this).constructor)); } return n.prototype = Object.create(t.prototype, {
            constructor: {
              value: n, enumerable: !1, writable: !0, configurable: !0,
            },
          }), i(n, t);
        }, r(t);
      } function o() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (() => {}))); } catch (t) {} return (o = function () { return !!t; })(); } function i(t, e) { return i = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, i(t, e); } function c(t) { return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, c(t); } const a = (function (n) { function r() { let e; let n; let i; let a; return (function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, r)), (n = this, i = r, i = c(i), e = (function (e, n) { if (n && (t(n) === 'object' || typeof n === 'function')) return n; if (void 0 !== n) throw new TypeError('Derived constructors may only return object or undefined'); return (function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t; }(e)); }(n, o() ? Reflect.construct(i, a || [], c(n).constructor) : i.apply(n, a)))).shadowDOM = e.attachShadow({ mode: 'open' }), e; } let a; let u; return (function (t, e) { if (typeof e !== 'function' && e !== null) throw new TypeError('Super expression must either be null or a function'); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, 'prototype', { writable: !1 }), e && i(t, e); }(r, n)), a = r, (u = [{ key: 'connectedCallback', value() { this.render(); } }, { key: 'render', value() { this.shadowDOM.innerHTML = "\n      <style>\n        * {\n          margin: 0;\n          padding: 0;\n          box-sizing: border-box;\n          font-family: 'Poppins';\n        }\n\n        :host {\n          display: block;\n          width: 100%;\n          background-color: #1e293b;\n          color: white;\n          box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n        }\n\n        h1 {\n          padding: 20px;\n          font-size: 45px;\n          text-align: center;\n        }\n      </style>\n          \n      <h1>Nyam Nyam Nyam</h1>\n    "; } }]) && e(a.prototype, u), Object.defineProperty(a, 'prototype', { writable: !1 }), r; }(r(HTMLElement))); customElements.define('header-app', a);
    },
    998: () => {
      function t(e) { return t = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (t) { return typeof t; } : function (t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t; }, t(e); } function e(t, e) { for (let r = 0; r < e.length; r++) { const o = e[r]; o.enumerable = o.enumerable || !1, o.configurable = !0, 'value' in o && (o.writable = !0), Object.defineProperty(t, n(o.key), o); } } function n(e) { const n = (function (e, n) { if (t(e) != 'object' || !e) return e; const r = e[Symbol.toPrimitive]; if (void 0 !== r) { const o = r.call(e, 'string'); if (t(o) != 'object') return o; throw new TypeError('@@toPrimitive must return a primitive value.'); } return String(e); }(e)); return t(n) == 'symbol' ? n : String(n); } function r(t) {
        const e = typeof Map === 'function' ? new Map() : void 0; return r = function (t) {
          if (t === null || !(function (t) { try { return Function.toString.call(t).indexOf('[native code]') !== -1; } catch (e) { return typeof t === 'function'; } }(t))) return t; if (typeof t !== 'function') throw new TypeError('Super expression must either be null or a function'); if (void 0 !== e) { if (e.has(t)) return e.get(t); e.set(t, n); } function n() { return (function (t, e, n) { if (o()) return Reflect.construct.apply(null, arguments); const r = [null]; r.push.apply(r, e); const c = new (t.bind.apply(t, r))(); return n && i(c, n.prototype), c; }(t, arguments, c(this).constructor)); } return n.prototype = Object.create(t.prototype, {
            constructor: {
              value: n, enumerable: !1, writable: !0, configurable: !0,
            },
          }), i(n, t);
        }, r(t);
      } function o() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (() => {}))); } catch (t) {} return (o = function () { return !!t; })(); } function i(t, e) { return i = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, i(t, e); } function c(t) { return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, c(t); } const a = (function (n) { function r() { let e; let n; let i; let a; return (function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, r)), (n = this, i = r, i = c(i), e = (function (e, n) { if (n && (t(n) === 'object' || typeof n === 'function')) return n; if (void 0 !== n) throw new TypeError('Derived constructors may only return object or undefined'); return (function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t; }(e)); }(n, o() ? Reflect.construct(i, a || [], c(n).constructor) : i.apply(n, a)))).shadowDOM = e.attachShadow({ mode: 'open' }), e; } let a; let u; return (function (t, e) { if (typeof e !== 'function' && e !== null) throw new TypeError('Super expression must either be null or a function'); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, 'prototype', { writable: !1 }), e && i(t, e); }(r, n)), a = r, (u = [{ key: 'connectedCallback', value() { this.render(); } }, { key: 'clickEvent', set(t) { this._clickEvent = t, this.render(); } }, { key: 'value', get() { return this.shadowDOM.querySelector('#searchElement').value; } }, { key: 'render', value() { this.shadowDOM.innerHTML = '\n      <style>\n        .search-container {\n          background-color: #1e293b;\n          box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n          padding: 16px;\n          width: 100vw;\n          max-width: 800px;\n          border-radius: 10px;\n          display: flex;\n          position: sticky;\n          top: 10%;\n        }\n\n        .search-box {\n          width: 100%;\n          display: grid;\n          grid-template-columns: 9fr 3fr;\n          gap: 15px;\n        }\n        \n        .search-box input {\n          font-size: 15px;\n          padding: 6px;\n          border: 2px solid #ccc;\n          background: transparent;\n          border-radius: 4px;\n          color: #fff;\n        }\n        \n        .search-box button {\n          font-size: 15px;\n          background-color: #ffb92a;\n          border: none;\n          font-weight: 500;\n          border-radius: 6px;\n          cursor: pointer;\n          transition: all 0.3s ease;\n        }\n      </style>\n          \n      <div id="search-container" class="search-container">\n          <div class="search-box">\n            <input type="text" id="searchElement" placeholder="Enter Food Name ...">\n            <button id="searchButtonElement">Search</button>\n          </div>\n      </div>\n    ', this.shadowDOM.querySelector('#searchButtonElement').addEventListener('click', this._clickEvent); } }]) && e(a.prototype, u), Object.defineProperty(a, 'prototype', { writable: !1 }), r; }(r(HTMLElement))); customElements.define('search-bar', a);
    },
    890: (t, e, n) => {
      n.d(e, { Z: () => a }); const r = n(81); const o = n.n(r); const i = n(645); const c = n.n(i)()(o()); c.push([t.id, "* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Poppins', sans-serif;\n}\n\nbody {\n  height: 100vh;\n  background: #1c1917\n}\n\nmain {\n  width: 90%;\n  max-width: 800px;\n  margin: 32px auto;\n}\n  \nfood-list {\n  display: block;\n  margin-top: 30px;\n  width: 100%;\n  padding: 16px;\n}", '']); const a = c;
    },
    645: (t) => {
      t.exports = function (t) { const e = []; return e.toString = function () { return this.map(((e) => { let n = ''; const r = void 0 !== e[5]; return e[4] && (n += '@supports ('.concat(e[4], ') {')), e[2] && (n += '@media '.concat(e[2], ' {')), r && (n += '@layer'.concat(e[5].length > 0 ? ' '.concat(e[5]) : '', ' {')), n += t(e), r && (n += '}'), e[2] && (n += '}'), e[4] && (n += '}'), n; })).join(''); }, e.i = function (t, n, r, o, i) { typeof t === 'string' && (t = [[null, t, void 0]]); const c = {}; if (r) for (let a = 0; a < this.length; a++) { const u = this[a][0]; u != null && (c[u] = !0); } for (let f = 0; f < t.length; f++) { const l = [].concat(t[f]); r && c[l[0]] || (void 0 !== i && (void 0 === l[5] || (l[1] = '@layer'.concat(l[5].length > 0 ? ' '.concat(l[5]) : '', ' {').concat(l[1], '}')), l[5] = i), n && (l[2] ? (l[1] = '@media '.concat(l[2], ' {').concat(l[1], '}'), l[2] = n) : l[2] = n), o && (l[4] ? (l[1] = '@supports ('.concat(l[4], ') {').concat(l[1], '}'), l[4] = o) : l[4] = ''.concat(o)), e.push(l)); } }, e; };
    },
    81: (t) => {
      t.exports = function (t) { return t[1]; };
    },
    666: (t) => {
      const e = (function (t) {
        let e; const n = Object.prototype; const r = n.hasOwnProperty; const o = Object.defineProperty || function (t, e, n) { t[e] = n.value; }; const i = typeof Symbol === 'function' ? Symbol : {}; const c = i.iterator || '@@iterator'; const a = i.asyncIterator || '@@asyncIterator'; const u = i.toStringTag || '@@toStringTag'; function f(t, e, n) {
          return Object.defineProperty(t, e, {
            value: n, enumerable: !0, configurable: !0, writable: !0,
          }), t[e];
        } try { f({}, ''); } catch (t) { f = function (t, e, n) { return t[e] = n; }; } function l(t, e, n, r) { const i = e && e.prototype instanceof b ? e : b; const c = Object.create(i.prototype); const a = new L(r || []); return o(c, '_invoke', { value: P(t, n, a) }), c; } function s(t, e, n) { try { return { type: 'normal', arg: t.call(e, n) }; } catch (t) { return { type: 'throw', arg: t }; } }t.wrap = l; const p = 'suspendedStart'; const y = 'suspendedYield'; const h = 'executing'; const d = 'completed'; const v = {}; function b() {} function m() {} function g() {} let w = {}; f(w, c, (function () { return this; })); const x = Object.getPrototypeOf; const O = x && x(x(M([]))); O && O !== n && r.call(O, c) && (w = O); const j = g.prototype = b.prototype = Object.create(w); function E(t) { ['next', 'throw', 'return'].forEach(((e) => { f(t, e, (function (t) { return this._invoke(e, t); })); })); } function S(t, e) { function n(o, i, c, a) { const u = s(t[o], t, i); if (u.type !== 'throw') { const f = u.arg; const l = f.value; return l && typeof l === 'object' && r.call(l, '__await') ? e.resolve(l.__await).then(((t) => { n('next', t, c, a); }), ((t) => { n('throw', t, c, a); })) : e.resolve(l).then(((t) => { f.value = t, c(f); }), ((t) => n('throw', t, c, a))); }a(u.arg); } let i; o(this, '_invoke', { value(t, r) { function o() { return new e(((e, o) => { n(t, r, e, o); })); } return i = i ? i.then(o, o) : o(); } }); } function P(t, n, r) { let o = p; return function (i, c) { if (o === h) throw new Error('Generator is already running'); if (o === d) { if (i === 'throw') throw c; return { value: e, done: !0 }; } for (r.method = i, r.arg = c; ;) { const a = r.delegate; if (a) { const u = _(a, r); if (u) { if (u === v) continue; return u; } } if (r.method === 'next')r.sent = r._sent = r.arg; else if (r.method === 'throw') { if (o === p) throw o = d, r.arg; r.dispatchException(r.arg); } else r.method === 'return' && r.abrupt('return', r.arg); o = h; const f = s(t, n, r); if (f.type === 'normal') { if (o = r.done ? d : y, f.arg === v) continue; return { value: f.arg, done: r.done }; }f.type === 'throw' && (o = d, r.method = 'throw', r.arg = f.arg); } }; } function _(t, n) { const r = n.method; const o = t.iterator[r]; if (o === e) return n.delegate = null, r === 'throw' && t.iterator.return && (n.method = 'return', n.arg = e, _(t, n), n.method === 'throw') || r !== 'return' && (n.method = 'throw', n.arg = new TypeError(`The iterator does not provide a '${r}' method`)), v; const i = s(o, t.iterator, n.arg); if (i.type === 'throw') return n.method = 'throw', n.arg = i.arg, n.delegate = null, v; const c = i.arg; return c ? c.done ? (n[t.resultName] = c.value, n.next = t.nextLoc, n.method !== 'return' && (n.method = 'next', n.arg = e), n.delegate = null, v) : c : (n.method = 'throw', n.arg = new TypeError('iterator result is not an object'), n.delegate = null, v); } function T(t) { const e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function k(t) { const e = t.completion || {}; e.type = 'normal', delete e.arg, t.completion = e; } function L(t) { this.tryEntries = [{ tryLoc: 'root' }], t.forEach(T, this), this.reset(!0); } function M(t) { if (t != null) { const n = t[c]; if (n) return n.call(t); if (typeof t.next === 'function') return t; if (!isNaN(t.length)) { let o = -1; const i = function n() { for (;++o < t.length;) if (r.call(t, o)) return n.value = t[o], n.done = !1, n; return n.value = e, n.done = !0, n; }; return i.next = i; } } throw new TypeError(`${typeof t} is not iterable`); } return m.prototype = g, o(j, 'constructor', { value: g, configurable: !0 }), o(g, 'constructor', { value: m, configurable: !0 }), m.displayName = f(g, u, 'GeneratorFunction'), t.isGeneratorFunction = function (t) { const e = typeof t === 'function' && t.constructor; return !!e && (e === m || (e.displayName || e.name) === 'GeneratorFunction'); }, t.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, g) : (t.__proto__ = g, f(t, u, 'GeneratorFunction')), t.prototype = Object.create(j), t; }, t.awrap = function (t) { return { __await: t }; }, E(S.prototype), f(S.prototype, a, (function () { return this; })), t.AsyncIterator = S, t.async = function (e, n, r, o, i) { void 0 === i && (i = Promise); const c = new S(l(e, n, r, o), i); return t.isGeneratorFunction(n) ? c : c.next().then(((t) => (t.done ? t.value : c.next()))); }, E(j), f(j, u, 'Generator'), f(j, c, (function () { return this; })), f(j, 'toString', (() => '[object Generator]')), t.keys = function (t) { const e = Object(t); const n = []; for (const r in e)n.push(r); return n.reverse(), function t() { for (;n.length;) { const r = n.pop(); if (r in e) return t.value = r, t.done = !1, t; } return t.done = !0, t; }; }, t.values = M, L.prototype = {
          constructor: L, reset(t) { if (this.prev = 0, this.next = 0, this.sent = this._sent = e, this.done = !1, this.delegate = null, this.method = 'next', this.arg = e, this.tryEntries.forEach(k), !t) for (const n in this)n.charAt(0) === 't' && r.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e); }, stop() { this.done = !0; const t = this.tryEntries[0].completion; if (t.type === 'throw') throw t.arg; return this.rval; }, dispatchException(t) { if (this.done) throw t; const n = this; function o(r, o) { return a.type = 'throw', a.arg = t, n.next = r, o && (n.method = 'next', n.arg = e), !!o; } for (let i = this.tryEntries.length - 1; i >= 0; --i) { const c = this.tryEntries[i]; var a = c.completion; if (c.tryLoc === 'root') return o('end'); if (c.tryLoc <= this.prev) { const u = r.call(c, 'catchLoc'); const f = r.call(c, 'finallyLoc'); if (u && f) { if (this.prev < c.catchLoc) return o(c.catchLoc, !0); if (this.prev < c.finallyLoc) return o(c.finallyLoc); } else if (u) { if (this.prev < c.catchLoc) return o(c.catchLoc, !0); } else { if (!f) throw new Error('try statement without catch or finally'); if (this.prev < c.finallyLoc) return o(c.finallyLoc); } } } }, abrupt(t, e) { for (let n = this.tryEntries.length - 1; n >= 0; --n) { const o = this.tryEntries[n]; if (o.tryLoc <= this.prev && r.call(o, 'finallyLoc') && this.prev < o.finallyLoc) { var i = o; break; } }i && (t === 'break' || t === 'continue') && i.tryLoc <= e && e <= i.finallyLoc && (i = null); const c = i ? i.completion : {}; return c.type = t, c.arg = e, i ? (this.method = 'next', this.next = i.finallyLoc, v) : this.complete(c); }, complete(t, e) { if (t.type === 'throw') throw t.arg; return t.type === 'break' || t.type === 'continue' ? this.next = t.arg : t.type === 'return' ? (this.rval = this.arg = t.arg, this.method = 'return', this.next = 'end') : t.type === 'normal' && e && (this.next = e), v; }, finish(t) { for (let e = this.tryEntries.length - 1; e >= 0; --e) { const n = this.tryEntries[e]; if (n.finallyLoc === t) return this.complete(n.completion, n.afterLoc), k(n), v; } }, catch(t) { for (let e = this.tryEntries.length - 1; e >= 0; --e) { const n = this.tryEntries[e]; if (n.tryLoc === t) { const r = n.completion; if (r.type === 'throw') { var o = r.arg; k(n); } return o; } } throw new Error('illegal catch attempt'); }, delegateYield(t, n, r) { return this.delegate = { iterator: M(t), resultName: n, nextLoc: r }, this.method === 'next' && (this.arg = e), v; },
        }, t;
      }(t.exports)); try { regeneratorRuntime = e; } catch (t) { typeof globalThis === 'object' ? globalThis.regeneratorRuntime = e : Function('r', 'regeneratorRuntime = r')(e); }
    },
    379: (t) => {
      const e = []; function n(t) { for (var n = -1, r = 0; r < e.length; r++) if (e[r].identifier === t) { n = r; break; } return n; } function r(t, r) {
        for (var i = {}, c = [], a = 0; a < t.length; a++) {
          const u = t[a]; const f = r.base ? u[0] + r.base : u[0]; const l = i[f] || 0; const s = ''.concat(f, ' ').concat(l); i[f] = l + 1; const p = n(s); const y = {
            css: u[1], media: u[2], sourceMap: u[3], supports: u[4], layer: u[5],
          }; if (p !== -1)e[p].references++, e[p].updater(y); else { const h = o(y, r); r.byIndex = a, e.splice(a, 0, { identifier: s, updater: h, references: 1 }); }c.push(s);
        } return c;
      } function o(t, e) { const n = e.domAPI(e); return n.update(t), function (e) { if (e) { if (e.css === t.css && e.media === t.media && e.sourceMap === t.sourceMap && e.supports === t.supports && e.layer === t.layer) return; n.update(t = e); } else n.remove(); }; }t.exports = function (t, o) { let i = r(t = t || [], o = o || {}); return function (t) { t = t || []; for (let c = 0; c < i.length; c++) { const a = n(i[c]); e[a].references--; } for (var u = r(t, o), f = 0; f < i.length; f++) { const l = n(i[f]); e[l].references === 0 && (e[l].updater(), e.splice(l, 1)); }i = u; }; };
    },
    569: (t) => {
      const e = {}; t.exports = function (t, n) { const r = (function (t) { if (void 0 === e[t]) { let n = document.querySelector(t); if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try { n = n.contentDocument.head; } catch (t) { n = null; }e[t] = n; } return e[t]; }(t)); if (!r) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid."); r.appendChild(n); };
    },
    216: (t) => {
      t.exports = function (t) { const e = document.createElement('style'); return t.setAttributes(e, t.attributes), t.insert(e, t.options), e; };
    },
    565: (t, e, n) => {
      t.exports = function (t) { const e = n.nc; e && t.setAttribute('nonce', e); };
    },
    795: (t) => {
      t.exports = function (t) { if (typeof document === 'undefined') return { update() {}, remove() {} }; const e = t.insertStyleElement(t); return { update(n) { !(function (t, e, n) { let r = ''; n.supports && (r += '@supports ('.concat(n.supports, ') {')), n.media && (r += '@media '.concat(n.media, ' {')); const o = void 0 !== n.layer; o && (r += '@layer'.concat(n.layer.length > 0 ? ' '.concat(n.layer) : '', ' {')), r += n.css, o && (r += '}'), n.media && (r += '}'), n.supports && (r += '}'); const i = n.sourceMap; i && typeof btoa !== 'undefined' && (r += '\n/*# sourceMappingURL=data:application/json;base64,'.concat(btoa(unescape(encodeURIComponent(JSON.stringify(i)))), ' */')), e.styleTagTransform(r, t, e.options); }(e, t, n)); }, remove() { !(function (t) { if (t.parentNode === null) return !1; t.parentNode.removeChild(t); }(e)); } }; };
    },
    589: (t) => {
      t.exports = function (t, e) { if (e.styleSheet)e.styleSheet.cssText = t; else { for (;e.firstChild;)e.removeChild(e.firstChild); e.appendChild(document.createTextNode(t)); } };
    },
  }; const e = {}; function n(r) { const o = e[r]; if (void 0 !== o) return o.exports; const i = e[r] = { id: r, exports: {} }; return t[r](i, i.exports, n), i.exports; }n.n = (t) => { const e = t && t.__esModule ? () => t.default : () => t; return n.d(e, { a: e }), e; }, n.d = (t, e) => { for (const r in e)n.o(e, r) && !n.o(t, r) && Object.defineProperty(t, r, { enumerable: !0, get: e[r] }); }, n.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e), n.nc = void 0, (() => {
    n(666); const t = n(379); const e = n.n(t); const r = n(795); const o = n.n(r); const i = n(569); const c = n.n(i); const a = n(565); const u = n.n(a); const f = n(216); const l = n.n(f); const s = n(589); const p = n.n(s); const y = n(890); const h = {}; function d(t) { return d = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (t) { return typeof t; } : function (t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t; }, d(t); } function v(t, e) { for (let n = 0; n < e.length; n++) { const r = e[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, 'value' in r && (r.writable = !0), Object.defineProperty(t, b(r.key), r); } } function b(t) { const e = (function (t, e) { if (d(t) != 'object' || !t) return t; const n = t[Symbol.toPrimitive]; if (void 0 !== n) { const r = n.call(t, 'string'); if (d(r) != 'object') return r; throw new TypeError('@@toPrimitive must return a primitive value.'); } return String(t); }(t)); return d(e) == 'symbol' ? e : String(e); } function m(t) {
      const e = typeof Map === 'function' ? new Map() : void 0; return m = function (t) {
        if (t === null || !(function (t) { try { return Function.toString.call(t).indexOf('[native code]') !== -1; } catch (e) { return typeof t === 'function'; } }(t))) return t; if (typeof t !== 'function') throw new TypeError('Super expression must either be null or a function'); if (void 0 !== e) { if (e.has(t)) return e.get(t); e.set(t, n); } function n() { return (function (t, e, n) { if (g()) return Reflect.construct.apply(null, arguments); const r = [null]; r.push.apply(r, e); const o = new (t.bind.apply(t, r))(); return n && w(o, n.prototype), o; }(t, arguments, x(this).constructor)); } return n.prototype = Object.create(t.prototype, {
          constructor: {
            value: n, enumerable: !1, writable: !0, configurable: !0,
          },
        }), w(n, t);
      }, m(t);
    } function g() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (() => {}))); } catch (t) {} return (g = function () { return !!t; })(); } function w(t, e) { return w = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, w(t, e); } function x(t) { return x = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, x(t); }h.styleTagTransform = p(), h.setAttributes = u(), h.insert = c().bind(null, 'head'), h.domAPI = o(), h.insertStyleElement = l(), e()(y.Z, h), y.Z && y.Z.locals && y.Z.locals, n(357), n(998), n(190); const O = (function (t) { function e() { let t; let n; let r; let o; return (function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, e)), (n = this, r = e, r = x(r), t = (function (t, e) { if (e && (d(e) === 'object' || typeof e === 'function')) return e; if (void 0 !== e) throw new TypeError('Derived constructors may only return object or undefined'); return (function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t; }(t)); }(n, g() ? Reflect.construct(r, o || [], x(n).constructor) : r.apply(n, o)))).shadowDOM = t.attachShadow({ mode: 'open' }), t; } let n; let r; return (function (t, e) { if (typeof e !== 'function' && e !== null) throw new TypeError('Super expression must either be null or a function'); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, 'prototype', { writable: !1 }), e && w(t, e); }(e, t)), n = e, (r = [{ key: 'foods', set(t) { this._foods = t, this.render(); } }, { key: 'renderError', value(t) { this.shadowDOM.innerHTML = '\n        <style>\n          .placeholder {\n            font-weight: lighter;\n            color: rgba(0,0,0,0.5);\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n          }\n        </style>\n    ', this.shadowDOM.innerHTML += '<h2 class="placeholder">'.concat(t, '</h2>'); } }, { key: 'render', value() { const t = this; this.shadowDOM.innerHTML = '', this._foods.forEach(((e) => { const n = document.createElement('food-item'); n.food = e, t.shadowDOM.appendChild(n); })); } }]) && v(n.prototype, r), Object.defineProperty(n, 'prototype', { writable: !1 }), e; }(m(HTMLElement))); function j(t) { return j = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (t) { return typeof t; } : function (t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t; }, j(t); } function E(t, e) { for (let n = 0; n < e.length; n++) { const r = e[n]; r.enumerable = r.enumerable || !1, r.configurable = !0, 'value' in r && (r.writable = !0), Object.defineProperty(t, S(r.key), r); } } function S(t) { const e = (function (t, e) { if (j(t) != 'object' || !t) return t; const n = t[Symbol.toPrimitive]; if (void 0 !== n) { const r = n.call(t, 'string'); if (j(r) != 'object') return r; throw new TypeError('@@toPrimitive must return a primitive value.'); } return String(t); }(t)); return j(e) == 'symbol' ? e : String(e); }customElements.define('food-list', O); const P = (function () { function t() { !(function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, t)); } let e; let n; return e = t, n = [{ key: 'searchFood', value(t) { return fetch('www.themealdb.com/api/json/v1/1/search.php?s='.concat(t)).then(((t) => t.json())).then(((e) => (e.meals ? Promise.resolve(e.meals) : Promise.reject(''.concat(t, ' is not found'))))); } }], null && E(e.prototype, null), n && E(e, n), Object.defineProperty(e, 'prototype', { writable: !1 }), t; }()); document.addEventListener('DOMContentLoaded', (() => { const t = document.querySelector('search-bar'); const e = document.querySelector('club-list'); const n = function (t) { e.foods = t; }; const r = function (t) { e.renderError(t); }; t.clickEvent = function () { P.searchFood(t.value).then(n).catch(r); }; }));
  })();
})();
